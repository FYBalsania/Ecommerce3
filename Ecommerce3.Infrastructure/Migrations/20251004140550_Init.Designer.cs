// <auto-generated />
using System;
using Ecommerce3.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ecommerce3.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251004140550_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "ltree");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnchorText")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(6);

                    b.Property<string>("AnchorTitle")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(7);

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<string>("FullDescription")
                        .HasColumnType("text")
                        .HasColumnOrder(13);

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(11);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(14);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(9);

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(10);

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(12);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Brand_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Brand_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Brand_IsActive");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Brand_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("UK_Brand_Slug");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_Brand_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(5);

                    b.Property<string>("SessionId")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(3);

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(4);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Cart_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Cart_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("SessionId")
                        .HasDatabaseName("IX_Cart_SessionId");

                    b.HasIndex("Total")
                        .HasDatabaseName("IX_Cart_Total");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CartLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(6);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(5);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_CartLine_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_CartLine_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("Total")
                        .HasDatabaseName("IX_CartLine_Total");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("CartLine", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnchorText")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(6);

                    b.Property<string>("AnchorTitle")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(7);

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<string>("FullDescription")
                        .HasColumnType("text")
                        .HasColumnOrder(16);

                    b.Property<string>("GoogleCategory")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(8);

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(12);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(17);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(10);

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(11);

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(9);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnOrder(13);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("ltree")
                        .HasColumnOrder(14);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(15);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(18);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Category_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Category_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Category_IsActive");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Category_Name");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("IX_Category_ParentId");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("UK_Category_Slug");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_Category_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean")
                        .HasColumnOrder(8);

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(3);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(9);

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(10);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .HasDatabaseName("IX_Customer_CompanyName");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Customer_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Customer_DeletedAt");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasDatabaseName("UK_Customer_EmailAddress");

                    b.HasIndex("FirstName")
                        .HasDatabaseName("IX_Customer_FirstName");

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_Customer_LastName");

                    b.HasIndex("PasswordResetToken")
                        .HasDatabaseName("IX_Customer_PasswordResetToken");

                    b.HasIndex("PhoneNumber")
                        .HasDatabaseName("UK_Customer_PhoneNumber");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(7);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(8);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(9);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(4);

                    b.Property<string>("Landmark")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(12);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(5);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(11);

                    b.Property<string>("StateOrProvince")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(10);

                    b.Property<string>("Type")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_CustomerAddress_City");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_CustomerAddress_CreatedAt");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_CustomerAddress_DeletedAt");

                    b.HasIndex("PostalCode")
                        .HasDatabaseName("IX_CustomerAddress_PostalCode");

                    b.HasIndex("StateOrProvince")
                        .HasDatabaseName("IX_CustomerAddress_StateOrProvince");

                    b.ToTable("CustomerAddress", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.DeliveryWindow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(9);

                    b.Property<int?>("MaxValue")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<int>("MinValue")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<decimal?>("NormalizedMaxDays")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnOrder(7);

                    b.Property<decimal>("NormalizedMinDays")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnOrder(6);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(8);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_DeliveryWindow_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_DeliveryWindow_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_DeliveryWindow_Name");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("Name", "SortOrder", "IsActive")
                        .HasDatabaseName("IX_DeliveryWindow_Name_SortOrder_IsActive");

                    b.ToTable("DeliveryWindow", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(11);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(12);

                    b.Property<decimal?>("MaxDiscountAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(10);

                    b.Property<decimal?>("MinOrderValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<decimal?>("Percent")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(9);

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(5);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("UK_Discount_Code");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Discount_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Discount_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Discount_IsActive");

                    b.HasIndex("Scope")
                        .HasDatabaseName("IX_Discount_Scope");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("StartAt", "EndAt")
                        .HasDatabaseName("IX_Discount_StartAt_EndAt");

                    b.ToTable("Discount", (string)null);

                    b.HasDiscriminator<string>("Scope").HasValue("Discount");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.DiscountProduct", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.HasKey("DiscountId", "ProductId", "DeletedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountProduct", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(7);

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnOrder(13);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(15);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(4);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(3);

                    b.Property<int>("ImageTypeId")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<string>("Link")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(10);

                    b.Property<string>("LinkTarget")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(11);

                    b.Property<string>("Loading")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(9);

                    b.Property<string>("OgFileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<int?>("PageId")
                        .HasColumnType("integer")
                        .HasColumnOrder(16);

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("integer")
                        .HasColumnOrder(17);

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(14);

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(6);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(12);

                    b.Property<string>("Title")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Image_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Image_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("FileName")
                        .HasDatabaseName("IX_Image_FileName");

                    b.HasIndex("ImageTypeId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("BrandId", "SortOrder")
                        .HasDatabaseName("IX_Image_BrandId_SortOrder");

                    b.HasIndex("CategoryId", "SortOrder")
                        .HasDatabaseName("IX_Image_CategoryId_SortOrder");

                    b.HasIndex("PageId", "SortOrder")
                        .HasDatabaseName("IX_Image_PageId_SortOrder");

                    b.HasIndex("ProductGroupId", "SortOrder")
                        .HasDatabaseName("IX_Image_ProductGroupId_SortOrder");

                    b.HasIndex("ProductId", "SortOrder")
                        .HasDatabaseName("IX_Image_ProductId_SortOrder");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ImageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(4);

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(5);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ImageType_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ImageType_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_ImageType_IsActive");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("Entity", "Type")
                        .HasDatabaseName("IX_ImageType_Entity_Type");

                    b.ToTable("ImageType", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.KVPListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(2);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_KVPListItem_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Discriminator")
                        .HasDatabaseName("IX_KVPListItem_Discriminator");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("KVPListItem", (string)null);

                    b.HasDiscriminator().HasValue("KVPListItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("BrandId")
                        .HasColumnOrder(39);

                    b.Property<string>("BreadcrumbsJson")
                        .HasColumnType("text")
                        .HasColumnOrder(28);

                    b.Property<string>("CanonicalUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(18);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoryId")
                        .HasColumnOrder(40);

                    b.Property<string>("ContentHtml")
                        .HasColumnType("text")
                        .HasColumnOrder(24);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(11);

                    b.Property<string>("FooterScripts")
                        .HasColumnType("text")
                        .HasColumnOrder(35);

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(25);

                    b.Property<string>("HeaderScripts")
                        .HasColumnType("text")
                        .HasColumnOrder(34);

                    b.Property<string>("HreflangMapJson")
                        .HasColumnType("text")
                        .HasColumnOrder(29);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(43);

                    b.Property<bool>("IsIndexed")
                        .HasColumnType("boolean")
                        .HasColumnOrder(33);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(36);

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(15);

                    b.Property<string>("MetaKeywords")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(16);

                    b.Property<string>("MetaRobots")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(17);

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(14);

                    b.Property<string>("OgDescription")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(20);

                    b.Property<string>("OgImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(21);

                    b.Property<string>("OgTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(19);

                    b.Property<string>("OgType")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(22);

                    b.Property<string>("Path")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(12);

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("ProductGroupId")
                        .HasColumnOrder(42);

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(41);

                    b.Property<string>("RedirectFromJson")
                        .HasColumnType("text")
                        .HasColumnOrder(32);

                    b.Property<string>("Region")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(37);

                    b.Property<string>("SchemaJsonLd")
                        .HasColumnType("text")
                        .HasColumnOrder(27);

                    b.Property<int?>("SeoScore")
                        .HasColumnType("integer")
                        .HasColumnOrder(38);

                    b.Property<string>("SitemapFrequency")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(31);

                    b.Property<decimal>("SitemapPriority")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(30);

                    b.Property<string>("Summary")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(26);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(13);

                    b.Property<string>("TwitterCard")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(23);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Page_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Page_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Page_IsActive");

                    b.HasIndex("IsIndexed")
                        .HasDatabaseName("IX_Page_IsIndexed");

                    b.HasIndex("Path")
                        .IsUnique()
                        .HasDatabaseName("UK_Page_Path");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("BrandId", "CategoryId", "DeletedAt")
                        .IsUnique()
                        .HasDatabaseName("UK_Page_BrandId_CategoryId_DeletedAt");

                    b.ToTable("Page", (string)null);

                    b.HasDiscriminator().HasValue("Page");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdditionalShippingCharge")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(32);

                    b.Property<bool>("AllowReviews")
                        .HasColumnType("boolean")
                        .HasColumnOrder(22);

                    b.Property<string>("AnchorText")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(12);

                    b.Property<string>("AnchorTitle")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(13);

                    b.Property<int>("AverageRating")
                        .HasColumnType("integer")
                        .HasColumnOrder(23);

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnOrder(18);

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(11);

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(27);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<int>("DeliveryWindowId")
                        .HasColumnType("integer")
                        .HasColumnOrder(34);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(10);

                    b.Property<string>("EAN")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(6);

                    b.Property<bool>("FreeShipping")
                        .HasColumnType("boolean")
                        .HasColumnOrder(31);

                    b.Property<string>("FullDescription")
                        .HasColumnType("text")
                        .HasColumnOrder(21);

                    b.Property<string>("GTIN")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(3);

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("boolean")
                        .HasColumnOrder(39);

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("boolean")
                        .HasColumnOrder(37);

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean")
                        .HasColumnOrder(38);

                    b.Property<bool>("IsReturnable")
                        .HasColumnType("boolean")
                        .HasColumnOrder(40);

                    b.Property<string>("MFC")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(5);

                    b.Property<string>("MPN")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(4);

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("integer")
                        .HasColumnOrder(36);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(15);

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(16);

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(14);

                    b.Property<int>("MinOrderQuantity")
                        .HasColumnType("integer")
                        .HasColumnOrder(35);

                    b.Property<int>("MinStock")
                        .HasColumnType("integer")
                        .HasColumnOrder(29);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(8);

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(26);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(25);

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("integer")
                        .HasColumnOrder(19);

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(43);

                    b.Property<string>("ReturnPolicy")
                        .HasColumnType("text")
                        .HasColumnOrder(41);

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(20);

                    b.Property<bool>("ShowAvailability")
                        .HasColumnType("boolean")
                        .HasColumnOrder(30);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(9);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(44);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(42);

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnOrder(28);

                    b.Property<int>("TotalReviews")
                        .HasColumnType("integer")
                        .HasColumnOrder(24);

                    b.Property<string>("UPC")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.Property<decimal>("WeightKgs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(33);

                    b.Property<string>("_facets")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Facets")
                        .HasColumnOrder(45);

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Product_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Product_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("DeliveryWindowId");

                    b.HasIndex("EAN")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_EAN");

                    b.HasIndex("GTIN")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_GTIN");

                    b.HasIndex("IsBestSeller")
                        .HasDatabaseName("IX_Product_IsBestSeller");

                    b.HasIndex("IsFeatured")
                        .HasDatabaseName("IX_Product_IsFeatured");

                    b.HasIndex("IsNew")
                        .HasDatabaseName("IX_Product_IsNew");

                    b.HasIndex("MFC")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_MFC");

                    b.HasIndex("MPN")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_MPN");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_Name");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("SKU")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_SKU");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_Slug");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_Product_SortOrder");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Product_Status");

                    b.HasIndex("UPC")
                        .IsUnique()
                        .HasDatabaseName("UK_Product_UPC");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("_facets");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("_facets"), "gin");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductAttribute_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductAttribute_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductAttribute_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductAttribute_Slug");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_ProductAttribute_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductAttribute", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("BooleanValue")
                        .HasColumnType("boolean")
                        .HasColumnOrder(9);

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateOnly?>("DateOnlyValue")
                        .HasColumnType("date")
                        .HasColumnOrder(10);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(3);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(6);

                    b.Property<decimal?>("NumberValue")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnOrder(8);

                    b.Property<int>("ProductAttributeId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Discriminator")
                        .HasDatabaseName("IX_ProductAttributeValue_Discriminator");

                    b.HasIndex("Slug")
                        .HasDatabaseName("IX_ProductAttributeValue_Slug");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("ProductAttributeId", "Value")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductAttributeValue_ProductAttributeId_Value");

                    b.HasIndex("ProductAttributeId", "SortOrder", "Value")
                        .HasDatabaseName("IX_ProductAttributeValue_ProductAttributeId_SortOrder_Value");

                    b.ToTable("ProductAttributeValue", (string)null);

                    b.HasDiscriminator().HasValue("ProductAttributeValue");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("ProductId", "CategoryId", "DeletedAt")
                        .HasName("PK_ProductCategory_ProductId_CategoryId_DeletedAt");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductCategory_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductCategory_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsPrimary")
                        .HasDatabaseName("IX_ProductCategory_IsPrimary");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnchorText")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(6);

                    b.Property<string>("AnchorTitle")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(7);

                    b.Property<string>("Breadcrumb")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(4);

                    b.Property<string>("FullDescription")
                        .HasColumnType("text")
                        .HasColumnOrder(13);

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(11);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(14);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(9);

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnOrder(10);

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnOrder(12);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductGroup_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductGroup_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("IsActive")
                        .IsDescending()
                        .HasDatabaseName("IX_ProductGroup_IsActive");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductGroup_Name");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductGroup_Slug");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_ProductGroup_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductGroup", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroupProductAttribute", b =>
                {
                    b.Property<int>("ProductGroupId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductAttributeId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("ProductAttributeValueId")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<int>("ProductAttributeSortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("ProductAttributeValueSortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("ProductGroupId", "ProductAttributeId", "ProductAttributeValueId", "DeletedAt");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductGroupProductAttribute_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductGroupProductAttribute_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductAttributeValueId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductGroupProductAttribute", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductProductAttribute", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductAttributeId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("ProductAttributeValueId")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<int>("ProductAttributeSortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("ProductAttributeValueSortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("ProductId", "ProductAttributeId", "ProductAttributeValueId", "DeletedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductProductAttribute_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductAttributeId");

                    b.HasIndex("ProductAttributeValueId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductProductAttribute", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductQnA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.Property<int?>("AnsweredBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<DateTime?>("AnsweredOn")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(7);

                    b.Property<string>("AnswererIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(10);

                    b.Property<int?>("Approver")
                        .HasColumnType("integer")
                        .HasColumnOrder(9);

                    b.Property<string>("ApproverIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnOrder(3);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("AnsweredBy");

                    b.HasIndex("AnsweredOn")
                        .HasDatabaseName("IX_ProductQnA_AnsweredOn");

                    b.HasIndex("ApprovedOn")
                        .HasDatabaseName("IX_ProductQnA_ApprovedOn");

                    b.HasIndex("Approver");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductQnA_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductQnA_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_ProductQnA_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductQnA", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(7);

                    b.Property<int?>("Approver")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<string>("ApproverIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(3);

                    b.Property<string>("Review")
                        .HasMaxLength(18432)
                        .HasColumnType("varchar(18432)")
                        .HasColumnOrder(4);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("ApprovedOn")
                        .HasDatabaseName("IX_ProductReview_ApprovedOn");

                    b.HasIndex("Approver");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ProductReview_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ProductReview_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("SortOrder")
                        .HasDatabaseName("IX_ProductReview_SortOrder");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProductReview", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingCustomerAddressId")
                        .HasColumnType("integer")
                        .HasColumnOrder(7);

                    b.Property<int?>("CartId")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(52);

                    b.Property<int?>("CreatedByCustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(51);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(53);

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("Dated")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(59);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(58);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(60);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(12);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnOrder(2);

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(16);

                    b.Property<decimal>("ShippingCharge")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(13);

                    b.Property<int>("ShippingCustomerAddressId")
                        .HasColumnType("integer")
                        .HasColumnOrder(9);

                    b.Property<string>("ShippingStatus")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(17);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnOrder(15);

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(11);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(14);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedByCustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(57);

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("BillingCustomerAddressId");

                    b.HasIndex("CartId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_SalesOrder_CreatedAt");

                    b.HasIndex("CreatedByCustomerId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Dated")
                        .IsDescending()
                        .HasDatabaseName("IX_SalesOrder_Dated_D");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_SalesOrder_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasDatabaseName("UK_SalesOrder_Number");

                    b.HasIndex("PaymentStatus")
                        .HasDatabaseName("SalesOrder_PaymentStatus");

                    b.HasIndex("ShippingCustomerAddressId");

                    b.HasIndex("ShippingStatus")
                        .HasDatabaseName("SalesOrder_ShippingStatus");

                    b.HasIndex("Status")
                        .HasDatabaseName("SalesOrder_Status");

                    b.HasIndex("Total")
                        .HasDatabaseName("SalesOrder_Total");

                    b.HasIndex("UpdatedByCustomerId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("SalesOrder", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.SalesOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartLineId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(52);

                    b.Property<int>("CreatedByCustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(51);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(53);

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(59);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(58);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(60);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(7);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(56);

                    b.Property<int?>("UpdatedByCustomerId")
                        .HasColumnType("integer")
                        .HasColumnOrder(55);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(57);

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("integer")
                        .HasColumnOrder(54);

                    b.HasKey("Id");

                    b.HasIndex("CartLineId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_SalesOrderLine_CreatedAt");

                    b.HasIndex("CreatedByCustomerId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_SalesOrderLine_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesOrderId");

                    b.HasIndex("Total")
                        .HasDatabaseName("IX_SalesOrderLine_Total");

                    b.HasIndex("UpdatedByCustomerId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("SalesOrderLine", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.TextListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(51);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(50);

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(52);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(57);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(56);

                    b.Property<string>("DeletedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(58);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(2);

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(54);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(53);

                    b.Property<string>("UpdatedByIp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnOrder(55);

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_TextListItem_CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_TextListItem_DeletedAt");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("Discriminator")
                        .HasDatabaseName("IX_TextListItem_Discriminator");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_TextListItem_Type");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TextListItem", (string)null);

                    b.HasDiscriminator().HasValue("TextListItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce3.Infrastructure.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Infrastructure.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AppUserToken", (string)null);
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductDiscount", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Discount");

                    b.HasDiscriminator().HasValue("ProductDiscount");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ShippingDiscount", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Discount");

                    b.HasDiscriminator().HasValue("ShippingDiscount");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CategoryKVPListItem", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.KVPListItem");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(7);

                    b.HasIndex("CategoryId", "Type")
                        .HasDatabaseName("IX_CategoryKVPListItem_CategoryId_Type");

                    b.HasDiscriminator().HasValue("CategoryKVPListItem");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductKVPListItem", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.KVPListItem");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(8);

                    b.HasIndex("ProductId", "Type")
                        .HasDatabaseName("IX_ProductKVPListItem_ProductId_Type");

                    b.HasDiscriminator().HasValue("ProductKVPListItem");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.BrandCategoryPage", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Page");

                    b.HasIndex("BrandId")
                        .IsUnique();

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("BrandCategoryPage");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.BrandPage", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Page");

                    b.HasIndex("BrandId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("BrandPage");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CategoryPage", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Page");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("CategoryPage");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroupPage", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Page");

                    b.HasIndex("ProductGroupId")
                        .IsUnique();

                    b.HasIndex("ProductGroupId", "DeletedAt")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductGroupPage_ProductGroupId_DeletedAt");

                    b.HasDiscriminator().HasValue("ProductGroupPage");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductPage", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.Page");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("ProductId", "DeletedAt")
                        .IsUnique()
                        .HasDatabaseName("UK_ProductPage_ProductId_DeletedAt");

                    b.HasDiscriminator().HasValue("ProductPage");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttributeColourValue", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.ProductAttributeValue");

                    b.Property<string>("ColourFamily")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnOrder(13);

                    b.Property<string>("ColourFamilyHexCode")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(14);

                    b.Property<string>("HexCode")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnOrder(12);

                    b.HasDiscriminator().HasValue("ProductAttributeColourValue");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductTextListItem", b =>
                {
                    b.HasBaseType("Ecommerce3.Domain.Entities.TextListItem");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.HasIndex("ProductId", "Type", "SortOrder")
                        .HasDatabaseName("IX_ProductId_Type_SortOrder");

                    b.HasDiscriminator().HasValue("ProductTextListItem");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Brand", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Cart", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("Customer");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CartLine", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Cart", "Cart")
                        .WithMany("Lines")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cart");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Category", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Customer", b =>
                {
                    b.OwnsMany("Ecommerce3.Domain.Entities.CustomerHistory", "History", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("integer");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("CompanyName")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(3);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(1);

                            b1.Property<string>("LastName")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(2);

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(4);

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp")
                                .HasColumnOrder(5);

                            b1.Property<string>("UpdatedByIp")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("varchar(128)")
                                .HasColumnOrder(6);

                            b1.HasKey("CustomerId", "__synthesizedOrdinal");

                            b1.ToTable("Customer");

                            b1.ToJson("History");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("History");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CustomerAddress", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Ecommerce3.Domain.Entities.CustomerAddressHistory", "History", b1 =>
                        {
                            b1.Property<int>("CustomerAddressId")
                                .HasColumnType("integer");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(5);

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(6);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(7);

                            b1.Property<string>("CompanyName")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(4);

                            b1.Property<string>("FullName")
                                .HasMaxLength(128)
                                .HasColumnType("varchar(128)")
                                .HasColumnOrder(2);

                            b1.Property<string>("Landmark")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(10);

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(3);

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnOrder(9);

                            b1.Property<string>("StateOrProvince")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(8);

                            b1.Property<string>("Type")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(1);

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp")
                                .HasColumnOrder(11);

                            b1.Property<string>("UpdatedByIp")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("varchar(128)")
                                .HasColumnOrder(12);

                            b1.HasKey("CustomerAddressId", "__synthesizedOrdinal");

                            b1.ToTable("CustomerAddress");

                            b1.ToJson("History");

                            b1.WithOwner()
                                .HasForeignKey("CustomerAddressId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("History");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.DeliveryWindow", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Discount", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.DiscountProduct", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.ProductDiscount", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Image", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Brand", "Brand")
                        .WithMany("Images")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Category")
                        .WithMany("Images")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.ImageType", "ImageType")
                        .WithMany()
                        .HasForeignKey("ImageTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Page", "Page")
                        .WithMany("Images")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.ProductGroup", "ProductGroup")
                        .WithMany("Images")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ImageType");

                    b.Navigation("Page");

                    b.Navigation("Product");

                    b.Navigation("ProductGroup");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ImageType", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.KVPListItem", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Page", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Product", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.DeliveryWindow", "DeliveryWindow")
                        .WithMany()
                        .HasForeignKey("DeliveryWindowId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.ProductGroup", "ProductGroup")
                        .WithMany()
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Brand");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("DeliveryWindow");

                    b.Navigation("ProductGroup");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttribute", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttributeValue", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("Values")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ProductAttribute");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("Categories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroup", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroupProductAttribute", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany()
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.ProductAttributeValue", "ProductAttributeValue")
                        .WithMany()
                        .HasForeignKey("ProductAttributeValueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.ProductGroup", "ProductGroup")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductAttributeValue");

                    b.Navigation("ProductGroup");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductProductAttribute", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany()
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.ProductAttributeValue", "ProductAttributeValue")
                        .WithMany()
                        .HasForeignKey("ProductAttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("ProductAttribute");

                    b.Navigation("ProductAttributeValue");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductQnA", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "AnsweredByUser")
                        .WithMany()
                        .HasForeignKey("AnsweredBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "ApproverUser")
                        .WithMany()
                        .HasForeignKey("Approver")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("QnAs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AnsweredByUser");

                    b.Navigation("ApproverUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductReview", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "ApproverUser")
                        .WithMany()
                        .HasForeignKey("Approver")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApproverUser");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.SalesOrder", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.CustomerAddress", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingCustomerAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "CreatedByCustomer")
                        .WithMany()
                        .HasForeignKey("CreatedByCustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.CustomerAddress", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingCustomerAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "UpdatedByCustomer")
                        .WithMany()
                        .HasForeignKey("UpdatedByCustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Ecommerce3.Domain.Models.CustomerAddressReference", "BillingAddressReference", b1 =>
                        {
                            b1.Property<int>("SalesOrderId")
                                .HasColumnType("integer");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(6);

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(7);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(8);

                            b1.Property<string>("CompanyName")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(5);

                            b1.Property<string>("FullName")
                                .HasMaxLength(128)
                                .HasColumnType("varchar(128)")
                                .HasColumnOrder(3);

                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnOrder(1);

                            b1.Property<string>("Landmark")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(11);

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(4);

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnOrder(10);

                            b1.Property<string>("StateOrProvince")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(9);

                            b1.Property<string>("Type")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(2);

                            b1.HasKey("SalesOrderId");

                            b1.ToTable("SalesOrder");

                            b1.ToJson("BillingAddressReference");

                            b1.WithOwner()
                                .HasForeignKey("SalesOrderId");
                        });

                    b.OwnsOne("Ecommerce3.Domain.Models.CustomerAddressReference", "ShippingAddressReference", b1 =>
                        {
                            b1.Property<int>("SalesOrderId")
                                .HasColumnType("integer");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(6);

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(7);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(8);

                            b1.Property<string>("CompanyName")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(5);

                            b1.Property<string>("FullName")
                                .HasMaxLength(128)
                                .HasColumnType("varchar(128)")
                                .HasColumnOrder(3);

                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnOrder(1);

                            b1.Property<string>("Landmark")
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(11);

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(4);

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnOrder(10);

                            b1.Property<string>("StateOrProvince")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(9);

                            b1.Property<string>("Type")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(2);

                            b1.HasKey("SalesOrderId");

                            b1.ToTable("SalesOrder");

                            b1.ToJson("ShippingAddressReference");

                            b1.WithOwner()
                                .HasForeignKey("SalesOrderId");
                        });

                    b.OwnsOne("Ecommerce3.Domain.Models.CustomerReference", "CustomerReference", b1 =>
                        {
                            b1.Property<int>("SalesOrderId")
                                .HasColumnType("integer");

                            b1.Property<string>("CompanyName")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(4);

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(2);

                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnOrder(1);

                            b1.Property<bool>("IsEmailVerified")
                                .HasColumnType("boolean")
                                .HasColumnOrder(6);

                            b1.Property<string>("LastName")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(3);

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(5);

                            b1.HasKey("SalesOrderId");

                            b1.ToTable("SalesOrder");

                            b1.ToJson("CustomerReference");

                            b1.WithOwner()
                                .HasForeignKey("SalesOrderId");
                        });

                    b.Navigation("BillingAddress");

                    b.Navigation("BillingAddressReference")
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("CreatedByCustomer");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Customer");

                    b.Navigation("CustomerReference")
                        .IsRequired();

                    b.Navigation("DeletedByUser");

                    b.Navigation("ShippingAddress");

                    b.Navigation("ShippingAddressReference")
                        .IsRequired();

                    b.Navigation("UpdatedByCustomer");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.SalesOrderLine", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.CartLine", "CartLine")
                        .WithMany()
                        .HasForeignKey("CartLineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "CreatedByCustomer")
                        .WithMany()
                        .HasForeignKey("CreatedByCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.SalesOrder", "SalesOrder")
                        .WithMany("Lines")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Domain.Entities.Customer", "UpdatedByCustomer")
                        .WithMany()
                        .HasForeignKey("UpdatedByCustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Ecommerce3.Domain.Models.ProductReference", "ProductReference", b1 =>
                        {
                            b1.Property<int>("SalesOrderLineId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("AdditionalShippingCharge")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnOrder(16);

                            b1.Property<decimal?>("CostPrice")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnOrder(14);

                            b1.Property<string>("Display")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(10);

                            b1.Property<string>("EAN")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(6);

                            b1.Property<bool>("FreeShipping")
                                .HasColumnType("boolean")
                                .HasColumnOrder(15);

                            b1.Property<string>("FullDescription")
                                .HasColumnType("text")
                                .HasColumnOrder(11);

                            b1.Property<string>("GTIN")
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnOrder(3);

                            b1.Property<int>("Id")
                                .HasColumnType("integer")
                                .HasColumnOrder(1);

                            b1.Property<string>("MFC")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(5);

                            b1.Property<string>("MPN")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(4);

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(8);

                            b1.Property<decimal?>("OldPrice")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnOrder(13);

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnOrder(12);

                            b1.Property<string>("ReturnPolicy")
                                .HasColumnType("text")
                                .HasColumnOrder(19);

                            b1.Property<bool>("Returnable")
                                .HasColumnType("boolean")
                                .HasColumnOrder(18);

                            b1.Property<string>("SKU")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnOrder(2);

                            b1.Property<string>("ShortDescription")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("varchar(512)")
                                .HasColumnOrder(10);

                            b1.Property<string>("Slug")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnOrder(9);

                            b1.Property<string>("UPC")
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnOrder(7);

                            b1.Property<decimal>("WeightKgs")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnOrder(17);

                            b1.HasKey("SalesOrderLineId");

                            b1.ToTable("SalesOrderLine");

                            b1.ToJson("ProductReference");

                            b1.WithOwner()
                                .HasForeignKey("SalesOrderLineId");
                        });

                    b.Navigation("CartLine");

                    b.Navigation("CreatedByCustomer");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Product");

                    b.Navigation("ProductReference")
                        .IsRequired();

                    b.Navigation("SalesOrder");

                    b.Navigation("UpdatedByCustomer");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.TextListItem", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Ecommerce3.Infrastructure.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CategoryKVPListItem", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Category")
                        .WithMany("KVPListItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductKVPListItem", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("KVPListItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.BrandCategoryPage", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Brand", "Brand")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.BrandCategoryPage", "BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Category")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.BrandCategoryPage", "CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.BrandPage", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Brand", "Brand")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.BrandPage", "BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.CategoryPage", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Category", "Category")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.CategoryPage", "CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroupPage", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.ProductGroup", "ProductGroup")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.ProductGroupPage", "ProductGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductPage", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithOne()
                        .HasForeignKey("Ecommerce3.Domain.Entities.ProductPage", "ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductTextListItem", b =>
                {
                    b.HasOne("Ecommerce3.Domain.Entities.Product", "Product")
                        .WithMany("TextListItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Cart", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Category", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("KVPListItems");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Page", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Categories");

                    b.Navigation("Images");

                    b.Navigation("KVPListItems");

                    b.Navigation("QnAs");

                    b.Navigation("Reviews");

                    b.Navigation("TextListItems");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductAttribute", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductGroup", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.SalesOrder", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("Ecommerce3.Domain.Entities.ProductDiscount", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
